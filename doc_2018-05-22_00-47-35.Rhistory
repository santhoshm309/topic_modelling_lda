plot(cars)
df <- c(33,4,5)
install.packages("RWeka")
install.packages("rjson")
getwd
getwd()
ls()
ls
ls ?
ewhdaj=
?rjson.fromjson
library("rjson")
?rjson.fromjson
?rjson.fromJson
?rjson.fromJSON
?rjson.fromJSON
?fromJSON
json <- fromJSON(file="Automotive_5.json")
str(json)
head(json)
head(json,10)
mydf <- data.frame(do.call("rbind", json))
RWeka::write.arff(mydf, "Automotive_5.arff")
json.size()
length(json)
json <- rjson::fromJSON(file="Automotive_5.json", method="C")
length(json)
json <- rjson::fromJSON(file="output-strict.json", method="C")
json <- rjson::fromJSON(file="output-strict.json", method="C")
str(json)
json <- rjson::fromJSON(file="output-strict.json", method="C")
json <- rjson::fromJSON(file="out.json", method="C")
str(json)
sunmary(json)
summary(json)
RWeka::write.arff(mydf, "Automotive_5.arff")
mydf <- data.frame(do.call("rbind", json))
install.packages("LDAvisData")
devtools::install_github("cpsievert/LDAvisData")
library("devtools")
installed.packages("devtools")
install.packages("devtools")
devtools::install_github("cpsievert/LDAvisData")
data(reviews, package = "LDAvisData")
head(reviews)
getwd()
setwd("/home/santhoshm309/Desktop/Machine Learning")
getwd()
data(reviews, package = "LDAvisData")
str(reviews)
str(reviews)
head(reviews)
install.packages("tm")
data(reviews, package = "LDAvisData")
str(reviews)
stop_words <- stopwords("SMART")
stopwords <- stop_words("SMART")
stop_words <- stopwords("SMART")
stop_words <- tm::stopwords("SMART")?
stop_words <- tm::stopwords("SMART")
stop_words <- tm::stopwords("SMART")
library("tm")
data(reviews, package = "LDAvisData")
# Stop words built into the library tm is loaded
stop_words <- tm::stopwords("SMART")
reviews <- gsub("","",reviews) #to remove apostrophes
reviews <- gsub("'","",reviews) #to remove apostrophes
reviews <- gsub("[[:punct:]]"," ", reviews) # to remove punctuations
reviews <- tolower(reviews)
reviews <- gsub("[[:cntrl:]]", " ", reviews) # to remove control charachters
reviews <- gsub("^[[:space:]]+","", reviews) # to remove white space in the begining
reviews <- gsub("[[:space:]]+$", "", reviews) # to remove whitespace at end of document
reviews <- tolower(reviews)
head(reviews)
reviews <- tolower(reviews)
doc.list <- strsplit(reviews, "[[:space:]]+")
term.table <- table(unlist(doc.list))
term.table <- sort(term.table, decreasing = TRUE)
head(term.table)
head(term.table)
head(term.table)
head(term.table)
head(term.table, 10)
del <- names(term.table) %in% stop_words | term.table < 5
term.table <- term.table[!del]
vocab <- names(term.table)
head(vocab)
# defining a function to modify vocab that can be used by the ML package lda
get_terms <- function(x) {
index <- match(vocab,x)
index <- index[!is.na(index)]
rbind(as.integer(index - 1), as.integer(rep(1, length(index))))
}
documents <- lapply(doc.list, get.terms)
documents <- lapply(doc.list, get_terms)
head(documents)
head(documents,1)
install.packages("lad")
install.packages("lda")
library("lda")
D <- length(documents)
W <- length(vocab)
doc.lenth <- sapply(documents, function(x){ sum(x[2, ])})
doc.length <- sapply(documents, function(x){ sum(x[2, ])})
N <- sum(doc.length)
term.frequency <- as.integer(term.table)
# MCMC and model tuning parameters:
K <- 20 #Number of topics
G <- 5000 # Gibbs sampler
alpha <- 0.02 # document topic distributions
eta <- 0.02 # topic term distributions
set.seed(357)
t1 <- Sys.time()
fit <- lda.collapsed.gibbs.sampler(documents = documents, K = K, vocab = vocab,
num.iterations = G, alpha = alpha,
eta = eta, initial = NULL, burnin = 0,
compute.log.likelihood = TRUE)
t2 <- Sys.time()
t2 - t1
t2 - t1
"Thus there is a time difference of \n"
"Thus there is a time difference of \n"
t2-t1
theta <- t(apply(fit$document_sums + alpha, 2, function(x) x/sum(x)))
phi <- t(apply(t(fit$topics) + eta, 2, function(x) x/sum(x)))
MovieReviews <- list(phi = phi,
theta = theta,
doc.length = doc.length,
vocab = vocab,
term.frequency = term.frequency)
json <- createJSON(phi = MovieReviews$phi,
theta = MovieReviews$theta,
doc.length = MovieReviews$doc.length,
vocab = MovieReviews$vocab,
term.frequency = MovieReviews$term.frequency)
library("LDAvis")
install.packages("LDAvis")
library("LDAvis")
json <- createJSON(phi = MovieReviews$phi,
theta = MovieReviews$theta,
doc.length = MovieReviews$doc.length,
vocab = MovieReviews$vocab,
term.frequency = MovieReviews$term.frequency)
serVis(json, out.dir = 'vis', open.browser = FALSE)
install.packages("servr")
serVis(json, out.dir = 'vis', open.browser = FALSE)
serVis(json, out.dir = 'vis', open.browser = FALSE)
